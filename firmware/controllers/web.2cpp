// Thanks CDFER https://github.com/CDFER/Captive-Portal-ESP32/tree/main for popup investigation

#include "h/webController.hpp"
#include <DNSServer.h>
#include <WiFi.h>
#include <AsyncTCP.h>
#include "ESPAsyncWebServer.h"

void setupWebServer();

extern const String localIPURL;

DNSServer dnsServer;
AsyncWebServer server(80);
bool server_started = false;

void WebServerSetup()
{
	if (server_started)
		return;

	ESP_LOGI("WebServer", "WebServer init started");

	setupWebServer();

#define DNS_INTERVAL 30
	dnsServer.setTTL(3600);
	dnsServer.start(53, "*", WiFi.softAPIP());

	server.begin();

	server_started = true;

	ESP_LOGI("WebServer", "WebServer init finished");
}

void WebServerLoop()
{
	if (!server_started)
		return;

	dnsServer.processNextRequest();
}

void setupWebServer()
{
	// Required
	server.on("/connecttest.txt", [](AsyncWebServerRequest *request)
			  { request->redirect("http://logout.net"); }); // windows 11 captive portal workaround
	server.on("/wpad.dat", [](AsyncWebServerRequest *request)
			  { request->send(404); }); // Honestly don't understand what this is but a 404 stops win 10 keep calling this repeatedly and panicking the esp32 :)

	// Background responses: Probably not all are Required, but some are. Others might speed things up?
	// A Tier (commonly used by modern systems)
	server.on("/generate_204", [](AsyncWebServerRequest *request)
			  { request->redirect(localIPURL); }); // android captive portal redirect
	server.on("/redirect", [](AsyncWebServerRequest *request)
			  { request->redirect(localIPURL); }); // microsoft redirect
	server.on("/hotspot-detect.html", [](AsyncWebServerRequest *request)
			  { request->redirect(localIPURL); }); // apple call home
	server.on("/canonical.html", [](AsyncWebServerRequest *request)
			  { request->redirect(localIPURL); }); // firefox captive portal call home
	server.on("/success.txt", [](AsyncWebServerRequest *request)
			  { request->send(200); }); // firefox captive portal call home
	server.on("/ncsi.txt", [](AsyncWebServerRequest *request)
			  { request->redirect(localIPURL); }); // windows call home

	// B Tier (uncommon)
	server.on("/chrome-variations/seed", [](AsyncWebServerRequest *request)
			  { request->send(200); }); // chrome captive portal call home
	server.on("/service/update2/json", [](AsyncWebServerRequest *request)
			  { request->send(200); }); // firefox?
	server.on("/chat", [](AsyncWebServerRequest *request)
			  { request->send(404); }); // No stop asking Whatsapp, there is no internet connection
	server.on("/startpage", [](AsyncWebServerRequest *request)
			  { request->redirect(localIPURL); });

	// return 404 to webpage icon
	server.on("/favicon.ico", [](AsyncWebServerRequest *request)
			  { request->send(404); }); // webpage icon

	// Serve Basic HTML Page
	server.on("/", HTTP_ANY, [](AsyncWebServerRequest *request)
			  {
		AsyncWebServerResponse *response = request->beginResponse(200, "text/html", index_html);
		response->addHeader("Cache-Control", "public,max-age=0");		
		request->send(response); });

	// the catch all
	server.onNotFound([](AsyncWebServerRequest *request)
					  { request->redirect(localIPURL); });
}